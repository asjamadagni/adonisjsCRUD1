"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Todo_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/Todo"));
class TodosController {
    async index({}) {
        return await Todo_1.default.query();
    }
    async show({ params }) {
        try {
            const todo = await Todo_1.default.find(params.id);
            if (todo) {
                return todo;
            }
        }
        catch (error) {
            console.log(error);
        }
    }
    async update({ request, params }) {
        const todo = await Todo_1.default.find(params.id);
        if (todo) {
            todo.title = request.input("title");
            todo.content = request.input("desc");
            todo.done = request.input("done");
            if (await todo.save()) {
                return todo;
            }
            return;
        }
        return;
    }
    async store({ auth, request, response }) {
        const user = await auth.authenticate();
        const todo = new Todo_1.default();
        todo.title = request.input("title");
        todo.desc = request.input("desc");
        await user.related("todos").save(todo);
        return {
            success: true,
        };
    }
    async destroy({ response, auth, params }) {
        const user = await auth.authenticate();
        const todo = await Todo_1.default.query().where("id", params.id).delete();
        return response.json({ message: "Deleted successfully" });
    }
}
exports.default = TodosController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9kb3NDb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVG9kb3NDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsaUZBQW1DO0FBRW5DLE1BQXFCLGVBQWU7SUFDM0IsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUF1QjtRQUN4QyxPQUFPLE1BQU0sY0FBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFTSxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxFQUF1QjtRQUMvQyxJQUFJO1lBQ0YsTUFBTSxJQUFJLEdBQUcsTUFBTSxjQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUN4QyxJQUFJLElBQUksRUFBRTtnQkFDUixPQUFPLElBQUksQ0FBQzthQUNiO1NBQ0Y7UUFBQyxPQUFPLEtBQUssRUFBRTtZQUNkLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDcEI7SUFDSCxDQUFDO0lBRU0sS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQXVCO1FBQzFELE1BQU0sSUFBSSxHQUFHLE1BQU0sY0FBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDeEMsSUFBSSxJQUFJLEVBQUU7WUFDUixJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDcEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3JDLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUVsQyxJQUFJLE1BQU0sSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFO2dCQUNyQixPQUFPLElBQUksQ0FBQzthQUNiO1lBQ0QsT0FBTztTQUNSO1FBQ0QsT0FBTztJQUNULENBQUM7SUFFTSxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQXVCO1FBQ2pFLE1BQU0sSUFBSSxHQUFHLE1BQU0sSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3ZDLE1BQU0sSUFBSSxHQUFHLElBQUksY0FBSSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVsQyxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRXZDLE9BQU87WUFDTCxPQUFPLEVBQUUsSUFBSTtTQUNkLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUF1QjtRQUNsRSxNQUFNLElBQUksR0FBRyxNQUFNLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN2QyxNQUFNLElBQUksR0FBRyxNQUFNLGNBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNoRSxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsQ0FBQyxDQUFDO0lBQzVELENBQUM7Q0FDRjtBQWpERCxrQ0FpREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ29udGV4dENvbnRyYWN0IH0gZnJvbSBcIkBpb2M6QWRvbmlzL0NvcmUvSHR0cENvbnRleHRcIjtcbmltcG9ydCBUb2RvIGZyb20gXCJBcHAvTW9kZWxzL1RvZG9cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9kb3NDb250cm9sbGVyIHtcbiAgcHVibGljIGFzeW5jIGluZGV4KHt9OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7XG4gICAgcmV0dXJuIGF3YWl0IFRvZG8ucXVlcnkoKTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBzaG93KHsgcGFyYW1zIH06IEh0dHBDb250ZXh0Q29udHJhY3QpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgdG9kbyA9IGF3YWl0IFRvZG8uZmluZChwYXJhbXMuaWQpO1xuICAgICAgaWYgKHRvZG8pIHtcbiAgICAgICAgcmV0dXJuIHRvZG87XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgdXBkYXRlKHsgcmVxdWVzdCwgcGFyYW1zIH06IEh0dHBDb250ZXh0Q29udHJhY3QpIHtcbiAgICBjb25zdCB0b2RvID0gYXdhaXQgVG9kby5maW5kKHBhcmFtcy5pZCk7XG4gICAgaWYgKHRvZG8pIHtcbiAgICAgIHRvZG8udGl0bGUgPSByZXF1ZXN0LmlucHV0KFwidGl0bGVcIik7XG4gICAgICB0b2RvLmNvbnRlbnQgPSByZXF1ZXN0LmlucHV0KFwiZGVzY1wiKTtcbiAgICAgIHRvZG8uZG9uZSA9IHJlcXVlc3QuaW5wdXQoXCJkb25lXCIpO1xuXG4gICAgICBpZiAoYXdhaXQgdG9kby5zYXZlKCkpIHtcbiAgICAgICAgcmV0dXJuIHRvZG87XG4gICAgICB9XG4gICAgICByZXR1cm47IC8vIDQyMlxuICAgIH1cbiAgICByZXR1cm47IC8vIDQwMVxuICB9XG5cbiAgcHVibGljIGFzeW5jIHN0b3JlKHsgYXV0aCwgcmVxdWVzdCwgcmVzcG9uc2UgfTogSHR0cENvbnRleHRDb250cmFjdCkge1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBhdXRoLmF1dGhlbnRpY2F0ZSgpO1xuICAgIGNvbnN0IHRvZG8gPSBuZXcgVG9kbygpO1xuICAgIHRvZG8udGl0bGUgPSByZXF1ZXN0LmlucHV0KFwidGl0bGVcIik7XG4gICAgdG9kby5kZXNjID0gcmVxdWVzdC5pbnB1dChcImRlc2NcIik7XG5cbiAgICBhd2FpdCB1c2VyLnJlbGF0ZWQoXCJ0b2Rvc1wiKS5zYXZlKHRvZG8pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgfTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBkZXN0cm95KHsgcmVzcG9uc2UsIGF1dGgsIHBhcmFtcyB9OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IGF1dGguYXV0aGVudGljYXRlKCk7XG4gICAgY29uc3QgdG9kbyA9IGF3YWl0IFRvZG8ucXVlcnkoKS53aGVyZShcImlkXCIsIHBhcmFtcy5pZCkuZGVsZXRlKCk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oeyBtZXNzYWdlOiBcIkRlbGV0ZWQgc3VjY2Vzc2Z1bGx5XCIgfSk7XG4gIH1cbn1cbiJdfQ==